{"uid":"31db1dd5a0a95d0f","name":"Check if user able to create a patient detail with valid endpoint and request body with existing values","fullName":"src/test/resources/features/patient.feature:13","historyId":"e4dbc44bc73109747588753cae6f46f9","time":{"start":1700602837709,"stop":1700602838519,"duration":810},"status":"failed","statusMessage":"expected:<400> but was:<401>","statusTrace":"java.lang.AssertionError: expected:<400> but was:<401>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepDifinitions.PatientSD.user_receives_Bad_Request_Status_with_message_and_boolean_success_details(PatientSD.java:201)\r\n\tat ✽.User receives 400 Bad Request Status with message and boolean success details(file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/patient.feature:16)\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"expected:<400> but was:<401>","statusTrace":"java.lang.AssertionError: expected:<400> but was:<401>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepDifinitions.PatientSD.user_receives_Bad_Request_Status_with_message_and_boolean_success_details(PatientSD.java:201)\r\n\tat ✽.User receives 400 Bad Request Status with message and boolean success details(file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/patient.feature:16)\r\n","steps":[{"name":"Given  User sets Authoization to Bearer Token","time":{"start":1700602837709,"stop":1700602837710,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Given  User creates POST Request for the PatientAPI endpoint","time":{"start":1700602837710,"stop":1700602837712,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"When  User sends HTTPS Request and  request Body with mandatory , additional  field","time":{"start":1700602837712,"stop":1700602838514,"duration":802},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Then  User receives 400 Bad Request Status with message and boolean success details","time":{"start":1700602838515,"stop":1700602838516,"duration":1},"status":"failed","statusMessage":"expected:<400> but was:<401>","statusTrace":"java.lang.AssertionError: expected:<400> but was:<401>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepDifinitions.PatientSD.user_receives_Bad_Request_Status_with_message_and_boolean_success_details(PatientSD.java:201)\r\n\tat ✽.User receives 400 Bad Request Status with message and boolean success details(file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/patient.feature:16)\r\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"tag","value":"02PostRequestWithExistingValues"},{"name":"host","value":"Shubhangi"},{"name":"thread","value":"36172@Shubhangi.main(1)"},{"name":"feature","value":"Patient Feature"},{"name":"story","value":"Check if user able to create a patient detail with valid endpoint and request body with existing values"},{"name":"suite","value":"Patient Feature"},{"name":"testClass","value":"Check if user able to create a patient detail with valid endpoint and request body with existing values"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/patient.feature"},{"name":"package","value":"src.test.resources.features.patient_feature.Patient Feature"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["02PostRequestWithExistingValues"]},"source":"31db1dd5a0a95d0f.json","parameterValues":[]}