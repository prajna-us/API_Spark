{"uid":"2d712757f44c0ec6","name":"User retrieves all morbidities with a valid API and Bearer Token","fullName":"src/test/resources/features/morbidity.feature:7","historyId":"3967fa30b88e9d69babd283ff7bd7690","time":{"start":1700602834077,"stop":1700602836091,"duration":2014},"status":"failed","statusMessage":"expected:<200> but was:<401>","statusTrace":"java.lang.AssertionError: expected:<200> but was:<401>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepDifinitions.MorbiditySD.response_status_code_should_be_ok_with_response_body(MorbiditySD.java:70)\r\n\tat ✽.Response status code should be 200 OK with response body(file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/morbidity.feature:9)\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"expected:<200> but was:<401>","statusTrace":"java.lang.AssertionError: expected:<200> but was:<401>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepDifinitions.MorbiditySD.response_status_code_should_be_ok_with_response_body(MorbiditySD.java:70)\r\n\tat ✽.Response status code should be 200 OK with response body(file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/morbidity.feature:9)\r\n","steps":[{"name":"Given  the user has set Authorization to Bearer Token","time":{"start":1700602834079,"stop":1700602834398,"duration":319},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"When  User creates a GET https request for the API endpoint to get all morbidities","time":{"start":1700602834400,"stop":1700602836076,"duration":1676},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Then  Response status code should be 200 OK with response body","time":{"start":1700602836076,"stop":1700602836085,"duration":9},"status":"failed","statusMessage":"expected:<200> but was:<401>","statusTrace":"java.lang.AssertionError: expected:<200> but was:<401>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepDifinitions.MorbiditySD.response_status_code_should_be_ok_with_response_body(MorbiditySD.java:70)\r\n\tat ✽.Response status code should be 200 OK with response body(file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/morbidity.feature:9)\r\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":3,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"tag","value":"01GetRequestForAllMorbidities"},{"name":"host","value":"Shubhangi"},{"name":"thread","value":"36172@Shubhangi.main(1)"},{"name":"feature","value":"Retrieve all Morbidities"},{"name":"story","value":"User retrieves all morbidities with a valid API and Bearer Token"},{"name":"suite","value":"Retrieve all Morbidities"},{"name":"testClass","value":"User retrieves all morbidities with a valid API and Bearer Token"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/morbidity.feature"},{"name":"package","value":"src.test.resources.features.morbidity_feature.Retrieve all Morbidities"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["01GetRequestForAllMorbidities"]},"source":"2d712757f44c0ec6.json","parameterValues":[]}