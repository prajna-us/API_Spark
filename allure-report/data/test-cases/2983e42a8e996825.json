{"uid":"2983e42a8e996825","name":"Check if user able to delete  a patient detail by using  invalid patientId  with valid endpoint and request body","fullName":"src/test/resources/features/patient.feature:124","historyId":"f763f4a845af29395dc09fbc038eb024","time":{"start":1700603025084,"stop":1700603025371,"duration":287},"status":"failed","statusMessage":"expected:<404> but was:<401>","statusTrace":"java.lang.AssertionError: expected:<404> but was:<401>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepDifinitions.PatientSD.user_receives_Not_Found_Status_with_response_body(PatientSD.java:414)\r\n\tat ✽.User receives 404 Not Found Status with response body(file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/patient.feature:127)\r\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"expected:<404> but was:<401>","statusTrace":"java.lang.AssertionError: expected:<404> but was:<401>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepDifinitions.PatientSD.user_receives_Not_Found_Status_with_response_body(PatientSD.java:414)\r\n\tat ✽.User receives 404 Not Found Status with response body(file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/patient.feature:127)\r\n","steps":[{"name":"Given  User sets Authoization to Bearer Token","time":{"start":1700603025084,"stop":1700603025085,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Given  User creates DELETE Request for the PatientAPI endpoint","time":{"start":1700603025085,"stop":1700603025085,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"When  User sends HTTPS Request and  request Body with mandatory patientId field for non-existing patient","time":{"start":1700603025086,"stop":1700603025369,"duration":283},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Then  User receives 404 Not Found Status with response body","time":{"start":1700603025369,"stop":1700603025370,"duration":1},"status":"failed","statusMessage":"expected:<404> but was:<401>","statusTrace":"java.lang.AssertionError: expected:<404> but was:<401>\r\n\tat org.junit.Assert.fail(Assert.java:89)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:835)\r\n\tat org.junit.Assert.assertEquals(Assert.java:647)\r\n\tat org.junit.Assert.assertEquals(Assert.java:633)\r\n\tat stepDifinitions.PatientSD.user_receives_Not_Found_Status_with_response_body(PatientSD.java:414)\r\n\tat ✽.User receives 404 Not Found Status with response body(file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/patient.feature:127)\r\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"stepsCount":4,"hasContent":true,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},"afterStages":[],"labels":[{"name":"tag","value":"19DeleteRequestNonExistingPatient"},{"name":"host","value":"Shubhangi"},{"name":"thread","value":"37516@Shubhangi.main(1)"},{"name":"feature","value":"Patient Feature"},{"name":"story","value":"Check if user able to delete  a patient detail by using  invalid patientId  with valid endpoint and request body"},{"name":"suite","value":"Patient Feature"},{"name":"testClass","value":"Check if user able to delete  a patient detail by using  invalid patientId  with valid endpoint and request body"},{"name":"framework","value":"cucumber4jvm"},{"name":"language","value":"java"},{"name":"gherkin_uri","value":"file:///C:/Users/shubh/IdeaProjects/API_Spark/src/test/resources/features/patient.feature"},{"name":"package","value":"src.test.resources.features.patient_feature.Patient Feature"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["19DeleteRequestNonExistingPatient"]},"source":"2983e42a8e996825.json","parameterValues":[]}